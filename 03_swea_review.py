# 홀수만 더하기
# 10개의 수를 입력 받아, 그 중에서 홀수만 더한 값을 출력하는 프로그램을 작성하라.
# 3 17 1 39 8 41 2 32 99 2
# 22 8 5 123 7 2 63 7 3 46
# 6 63 2 3 58 76 21 33 8 1 
# T = int(input())
# for t in range(1, T+1):
#     number = list(map(int, input().split())) # map 함수를 이용하여 여러 정수를 한 번에 입력받는다
#     sum = 0 # 홀수만 더하기 위해 sum이라는 변수를 만들어 놓는다.
#     for num in number: # map 함수를 이용하여 받아 놓은 여러 정수를 for 문을 통해 순회한다
#         if num%2 == 1: # 홀수만 구별하기 위해 if문과 나누기 연산자(%)2로 나눴을 때 1만 남는 수를
#             sum += num # sum 변수에 하나씩 담는다
#     print(sum)

# 서랍의 비밀번호
# 서랍의 비밀번호가 생각이 나지 않는다.
# 비밀번호 P는 000부터 999까지 번호 중의 하나이다.
# 주어지는 번호 K부터 1씩 증가하며 비밀번호를 확인해 볼 생각이다.
# 예를 들어 비밀번호 P가 123 이고 주어지는 번호 K가 100 일 때, 100부터 123까지 24번 확인하여 비밀번호를 맞출 수 있다
# P와 K가 주어지면 K부터 시작하여 몇 번 만에 P를 맞출 수 있는지 알아보자.
# 123 100

# a, b = list(map(int, input().split())) # 변수 a b 로 정수를 두개 받도록 설정 
# cnt = 0 # 주어지는 정수와 정수 사이에 수만큼 횟수를 표시하기 위해 변수 cnt = 0을 생성
# for num in range(b, a+1): # for 문을 통해 123 ~ 100 사이의 수만큼(24번) 순회하도록 하였으며, range(a, b+1, -1)로 거꾸로 해도 가능
#     cnt = cnt + 1 # for 문이 순회하는 수만큼 카운트 되도록 cnt = cnt + 1 으로 설정
# print(cnt)

# 간단한 N 의 약수
# 입력으로 1개의 정수 N 이 주어진다.
# 정수 N 의 약수를 오름차순으로 출력하는 프로그램을 작성하라.
# 10

number = int(input())
for num in range(1, number+1): # 10의 약수를 구하기 위해 1~10까지 순회 되도록 for문을 사용
    if number % num == 0: # number 10을 num 1~10까지 차례대로 나눴을 때 나머지가 0 이 나오는 수 1 2 5 10 이 10의 약수 임으로 if 문 사용
        print(num, end=" ")