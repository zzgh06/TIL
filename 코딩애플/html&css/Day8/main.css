/* fr 단위로 폭지정 가능  */
/* fr 단위는 유연한 단위로 그리드 컨테이너의 여유 공간을 비율을 분수(fraction)로 나눠 설정 */
/* 쉽게 이해하려면 배수로 이해하는게 편함 예) 1fr 2fr 전체폭에서 1배 2배로 나눔 */
.grid-container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 150px 150px 150px 100px;
  /* 옵션2. grid-area로 작성한 자식의 이름을 grid-template-areas를 통해 부모에 색칠하기 */
  grid-template-areas: 
    "header header header header"
    "side main main main"
    "side main main main"
    "footer footer footer footer";
}

.grid-container div {
  border: 1px solid black;
}

/* display grid 로 레이아웃만들려면 */
/* 옵션 1. 내부박스에게 grid-column / grid-row 주기 */
/* grid-column : display grid 자식들에만 사용 */

/* .grid-nav { */
  /* 세로선 1 ~ 4 만큼 차지해주세요 */
  /* grid-column: 1 / 5;
}

.grid-sidebar {
  grid-row: 2 / 4;
}

.grid-main {
  grid-column: 2 / 5;
  grid-row: 2 / 4;
} */

/* 옵션 2. 자식에 이름쓰고 부모는 색칠하기 */

/* grid-area : 자식에 이름쓰는 속성 */
.grid-nav {
  grid-area: header;
}

.grid-sidebar {
  grid-area: side;
}

.grid-main {
  grid-area: main;
}

.grid-footer {
  grid-area: footer;
}
/* 숙제2. grid-column, grid-row 를 이용해 위 레이아웃을 제작해봅시다. */
.grid-container2 {
  display: grid;
  width: 100%;
  max-width: 800px;
  margin: auto;
  grid-template-columns: 1fr 1fr 1fr;
  /* grid-template-row를 생략한 이유는 이미지 자체의 height 값이 있기  */
  padding: 20px;
}

.grid-container2 img {
  width : 100%;
  display: block;
}

/* 다른 이미지와 크기를 달리하는 즉, 크게 차지하는 이미지만 얼마나 차지할지 지정하면 */
/* 나머지 이미지는 grid-template-columns로 쪼개놓은 격자에 맞춰서 위치한다. */
/* 그래서 크게 차지하는 이미지만 얼마나 차지할 지, css를 적용해주면 된다. */
.grid-main-img {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
}

/* 숙제1. 블로그 레이아웃 + 모바일 반응형 */
@media (max-width: 767px){
	.grid-container {
    grid-template-areas: 
      "header header header header"
      "side side side side"
      "main main main main"
      "footer footer footer footer";
  }

  /* 모바일 사이즈에서는 세로로 한칸씩 차지하기 위해서는 */
  /* 격자를 하나로만 쪼갤 수 있도록 격자(column)를 수정하면 된다*/
  .grid-container2 {
    grid-template-columns: 1fr;
  }
  .grid-main-img {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
}