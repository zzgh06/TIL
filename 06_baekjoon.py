# 예제 1 : 유학 금지
# w = input() # 첫째 줄에 알파벳 대문자로 이루어진 단어가 주어진다

# for i in w: # input 값을 차례대로 순회
#     if i not in 'CAMBRIDGE': # 순회되는 문자열에 'CAMBRIDGE'이 포함되지 않은 문자열만 출력
#         print(i, end="")

# 문자열 중 특정 문자열을 제거하기 위해 조건문과 not in 활용 

# 예제 2 : 문자열 반복
# T = int(input()) # 첫째 줄에 테스트 케이스의 개수 T(1 ≤ T ≤ 1,000)가 주어진다

# for t in range(T):
#     r, s = map(str, input().split()) # 반복 횟수 R(1 ≤ R ≤ 8), 문자열 S가 공백으로 구분되어 주어진다.
#     text = '' # 반복횟수 r 및 문자열 s 를 저장할 빈 문자열 변수 text 작성(문자열도 리스트 처럼 빈 형태로 활용 가능)
#     for i in s: # 문자열 s의 요소를 차례대로 순회
#         text += i * int(r) # 순회하는 요소 하나하나를 r번만큼 곱하여 문저열 변수 text에 더하여 대입  
#     print(text)

# 입력되는 문자열 요소 하나하나를 일정 수만큼 반복하여 출력하기 위하여 이를 저장할
# text = '' 와 같은 비어있는 문자열 변수를 활용

# 예제 3 : 팰린드롬인지 확인하기
# s1 = input() 
# s2 = s1[::-1]

# if s1 == s2:
#     print(1)
# else:
#     print(0)

# 팰린드롬이란 앞으로 읽을 때와 거꾸로 읽을 때 똑같은 단어를 말한다.
# 그러므로 정방향 단어와 뒤집었을 때 단어가 일치하는지 비교해야한다.
# 이를 위해 입력 받은 문자열을 역슬라이싱으로 뒤에서부터 출력되도록 하여 이를 다른 변수에 저장.

# 예제 4 : 태보태보 총난타
# a, b = input().split("(^0^)")
# print(a.count('@'), b.count('@'))

# 입력 값 @===@==@=@==(^0^)==@=@===@ 에서 오른쪽, 왼쪽을 구분하기 위해 .split() 활용,
# 나뉘는 기준을 (^0^) 으로 하여 오른쪽 왼쪽을 구분
# 구분된 a, b에 문자열 메서드 count 사용

# 예제 5 : 크로아티아 알파벳
# words = input()
# croatia = ['c=', 'c-', 'dz=', 'd-', 'lj', 'nj', 's=', 'z=']

# for i in croatia:
#     words = words.replace(i, 'a')
# print(len(words))

# 변경된 크로아티아 알파벳을 리스트로 따로 저장한 뒤, 이를 반복문을 통해 하나씩 순회
# 입력된 문자열을 저장한 변수 Words에 문자열 메서드 .replace(기존문자, 새로운문자)를 통해 
# croatia 리스트 요소 i(기존문자)를 'a'(새로운문자)로 변경

# 예제 6 : 알파벳 찾기
# s = input()
# alpha = 'abcdefghijklmnopqrstuvwxyz'

# for i in alpha:
#     if i in s:
#         print(s.index(i), end=" ")
#     else:
#         print('-1', end=" ")

# 입력된 문자열 요소가 알파벳 안에 몇 번째 위치해 있는지 확인하기 위해
# 알파벳이 대입된 alpha 라는 문자열 변수를 생성
# 반복문을 통해 alpha 문자열 요소를 하나씩 순회하면서
# 순회하는 i 가 입력된 문자열 s 안에 포함되어 있으면 그 위치를 출력, 이때 문자열 메서드 .index(찾는문자)를 활용
# 그러지 않을 경우 -1를 출력