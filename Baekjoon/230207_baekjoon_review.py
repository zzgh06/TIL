# 17608 : 막대기
# 1. 높이만 다른 막대기를 일렬로 세우고, 왼쪽부터 차례대로 번호를 붙인다.
# 2. 나열된 막대기를 오른쪽에서 보았을 때, 보이는 막대의 수를 출력.
# import sys
# input = sys.stdin.readline


# n = int(input()) # 막대의 개수
# stack = [] # 막대기의 높이를 저장할 리스트

# [stack.append(int(input())) for _ in range(n)] # 막대기의 높이를 차례대로 입력 / 입력된 높이 값을 차례대로 저장

# last = stack[-1] # 오른쪽 끝 막대기 높이를 기준으로 비교
# cnt = 1 # 개수를 확인하기 위한 변수, 비교의 기준이 되는 stack[-1]를 포함하기 위해 1부터 카운트

# for i in reversed(range(n)): # 오른쪽에서 부터 비교하기 위해 range의 범위를 뒤집어서 비교
#     if stack[i] > last: # 순차적으로 비교하면서 last 변수에 저장된 값보다 stack[i]가 클경우
#         cnt += 1 # 카운트 변수에 1를 더하고
#         last = stack[i] # last 변수의 값을 stack[i] 값으로 변경

# print(cnt)

# 7568 : 덩치
# 어떤 사람의 몸무게가 x kg이고 키가 y cm라면 이 사람의 덩치는 (x, y)로 표시된다.
# 두 사람 A 와 B의 덩치가 각각 (x, y), (p, q)라고 할 때 x > p 그리고 y > q 이라면 우리는 A의 덩치가 B의 덩치보다 "더 크다"고 말한다.
# 그런데 서로 다른 덩치끼리 크기를 정할 수 없는 경우도 있다.
# 예를 들어 두 사람 C와 D의 덩치가 각각 (45, 181), (55, 173)이라면 몸무게는 D가 C보다 더 무겁고, 키는 C가 더 크므로, 
# "덩치"로만 볼 때 C와 D는 누구도 상대방보다 더 크다고 말할 수 없다.
# N명의 집단에서 각 사람의 덩치 등수는 자신보다 더 "큰 덩치"의 사람의 수로 정해진다. 만일 자신보다 더 큰 덩치의 사람이 k명이라면 그 사람의 덩치 등수는 k+1이 된다. 

# n = int(input())
# students = [] # 학생들의 몸무게와 키 값을 저장할 리스트

# for _ in range(n):
#     x, y = map(int, input().split())
#     students.append((x, y)) # 입력된 몸무게와 키를 튜플의 형태로 저장

# for i in students: 
#     rank = 1 # 등급을 위한 변수
#     for j in students:
#         if i[0] < j[0] and i[1] < j[1]: # 튜플을(x, y) 활용하여 각 몸무게와 키가 둘다(and) 클 경우
#             rank += 1 # 등급 업
    
#     print(rank, end=" ")


# 1063 : 킹
# 8*8크기의 체스판
# 체스판에는 돌이 하나 있는데, 돌과 같은 곳으로 이동할 때는, 돌을 킹이 움직인 방향과 같은 방향으로 한 칸 이동시킨다.
# 입력으로 킹이 어떻게 움직여야 하는지 주어진다.
# 입력으로 주어진 대로 움직여서 킹이나 돌이 체스판 밖으로 나갈 경우에는 그 이동은 건너 뛰고 다음 이동을 한다.
# 첫째 줄에 킹의 마지막 위치, 둘째 줄에 돌의 마지막 위치를 출력

# king, stone, n = input().split()
# k = list(map(int, [ord(king[0]) - 64, king[1]]))  # ord(), 아스키 코드를 통해 숫자로 변환
# s = list(map(int, [ord(stone[0]) - 64, stone[1]]))
# # print(k, s) # [1, 1] [1, 2]
# move = {'R': [1, 0], 'L': [-1, 0], 'B': [0, -1], 'T': [0, 1],
#         'RT': [1, 1], 'LT': [-1, 1], 'RB': [1, -1], 'LB': [-1, -1]}

# for _ in range(int(n)):
#     m = input()
#     nx = k[0] + move[m][0]  # 입력 조건대로 킹을 움직인다
#     ny = k[1] + move[m][1]
#     if 0 < nx <= 8 and 0 < ny <= 8:  # 체스판 내 킹이 움직일 수 있는 범위지정
#         if nx == s[0] and ny == s[1]:  # 킹이 스톤과 위치가 동일하다면
#             sx = s[0] + move[m][0]  # 킹이 움직인 방향과 동일한 방향으로 움직인다.
#             sy = s[1] + move[m][1]
#             if 0 < sx <= 8 and 0 < sy <= 8:  # 체스판 내 스톤이 움직일 수 있는 범위를 지정
#                 k = [nx, ny]  # 킹의 위치
#                 s = [sx, sy]  # 스톤의 위치
#         else:
#             k = [nx, ny]

# print(chr(k[0] + 64) + str(k[1]))  # chr() 다시 문자로 변환
# print(chr(s[0] + 64) + str(s[1]))
