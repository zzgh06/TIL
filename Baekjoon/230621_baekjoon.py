# 분해합
# 문제
# 어떤 자연수 N이 있을 때, 그 자연수 N의 분해합은 N과 N을 이루는 각 자리수의 합을 의미한다. 
# 어떤 자연수 M의 분해합이 N인 경우, M을 N의 생성자라 한다. 
# 예를 들어, 245의 분해합은 256(=245+2+4+5)이 된다. 따라서 245는 256의 생성자가 된다. 
# 물론, 어떤 자연수의 경우에는 생성자가 없을 수도 있다. 반대로, 생성자가 여러 개인 자연수도 있을 수 있다.
# 자연수 N이 주어졌을 때, N의 가장 작은 생성자를 구해내는 프로그램을 작성하시오.

# n = int(input())

# for i in range(1, n+1):
#     num = sum(map(int, str(i)))
#     total = i + num # 분해합 = 생성자 + 각 자릿수의 합
#     # i가 작은 수부터 차례로 들어가므로 처음으로 분해합과 입력값이 같을때가 가장 작은 생성자를 가짐
#     if total == n:
#         print(i)
#         break
#     elif i == n: # 생성자 i와 입력값이 같다는 것은 생성자가 없다는 뜻
#         print(0)


# 숫자의 개수
# 문제
# 세 개의 자연수 A, B, C가 주어질 때 A × B × C를 계산한 
# 결과에 0부터 9까지 각각의 숫자가 몇 번씩 쓰였는지를 구하는 프로그램을 작성하시오.

# 예를 들어 A = 150, B = 266, C = 427 이라면 A × B × C = 150 × 266 × 427 = 17037300 이 되고,
# 계산한 결과 17037300 에는 0이 3번, 1이 1번, 3이 2번, 7이 2번 쓰였다.

# import sys

# input = sys.stdin.readline

# a = int(input())
# b = int(input())
# c = int(input())

# result = list(str(a*b*c))

# for i in range(10):
#     print(result.count(str(i)))


# 학점계산
# 문제
# 어떤 사람의 C언어 성적이 주어졌을 때, 평점은 몇 점인지 출력하는 프로그램을 작성하시오.

# A+: 4.3, A0: 4.0, A-: 3.7
# B+: 3.3, B0: 3.0, B-: 2.7
# C+: 2.3, C0: 2.0, C-: 1.7
# D+: 1.3, D0: 1.0, D-: 0.7
# F: 0.0

# dict = {
#     'A+': '4.3', 'A0': '4.0', 'A-': '3.7',
#     'B+': '3.3', 'B0': '3.0', 'B-': '2.7',
#     'C+': '2.3', 'C0': '2.0', 'C-': '1.7',
#     'D+': '1.3', 'D0': '1.0', 'D-': '0.7',
#     'F': 0.0
# }

# grade = input()
# print(dict[grade])


# 다이얼
# 문제
# 상근이의 할머니는 아래 그림과 같이 오래된 다이얼 전화기를 사용한다.
# 전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 
# 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.
# 숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 
# 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.
# 상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다. 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 
# 예를 들어, UNUCIC는 868242와 같다.

# 할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 최소 시간을 구하는 프로그램을 작성하시오.

# alpha = ['ABC', 'DEF', 'GHI', 'JKL', 'MNO', 'PQRS', 'TUV', 'WXYZ']
# dial = input()
# time = 0

# for i in range(len(dial)): # 입력 값의 길이 만큼반복 
#     for j in alpha: # dial에 입력된 알파벳 리스트를 순회
#         if dial[i] in j: # 리스트 값이 입력값 안에 있을 경우
#             time += alpha.index(j) + 3 # 리스트의 인덱스 값에서 + 3
# print(time)


# 개수 세기
# 문제
# 총 N개의 정수가 주어졌을 때, 정수 v가 몇 개인지 구하는 프로그램을 작성하시오.

# n = int(input())
# nums = list(map(int, input().split()))
# v = int(input())
# cnt = 0

# for i in nums:
#     if i == v:
#         cnt += 1
# print(cnt)

# n = int(input())
# nums = list(map(int, input().split()))
# v = int(input())
# print(nums.count(v))
